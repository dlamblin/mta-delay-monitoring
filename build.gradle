buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.7.0'
    }
}

group 'lamblin'
version '0.1-SNAPSHOT'

//apply plugin: 'idea' // Should use directory based IDEA projects, this plugin does not.
apply plugin: 'application'
apply plugin: "com.google.protobuf"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile 'com.google.protobuf:protobuf-java-util:3.0.0-beta-1'
//    compile group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.0.0-beta-1'
    compile 'com.google.transit:gtfs-realtime-bindings:0.0.4'
//    compile group: 'org.google.transit', name: 'gtfs-realtime-bindings', version: '0.0.4'
//    compile 'com.offbytwo:docopt:0.6.0.20150202'
    compile group: 'com.offbytwo', name: 'docopt', version: '0.6.0.20150202'
}

protobuf {
    generateProtoTasks {
        // all() returns the collection of all protoc tasks
        all().each { task ->
            // Here you can configure the task
            // Configure built-in outputs. Each block generates a
            // '--<name>_out' flag to the protoc command line.
            task.builtins {
                // In Java projects, the "java" output is added automatically.
                // You only need it if you want it in an Android project or want to add
                // options.
                // DO NOT omit the braces if you want this builtin to be added.
                // java { }
                // In Android projects, the "javanano" output is added automatically.
                // You only need it if you want it in an Java project or want to add
                // options.
                // javanano {
                //     // Options added to --javanano_out
                //     option 'java_multiple_files=true'
                //     option 'ignore_services=true'
                // }
                // Turn on python proto generation
                python { }
            }
        }
    }
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.0.0-alpha-3'
//        artifact = 'com.google.protobuf:protobuf-java-util:3.0.0-beta-1'
    }
}

// First Application Script
mainClassName = "com.insight.lamblin.GtfsToJson"
applicationName = "gtfsToJson"

// Subsequent Scripts
task createAllStartScripts() << {
    // This task is added to by a loop over the scripts array creating-sub tasks
}
def scripts = [ 'gtfsToJson': 'com.insight.lamblin.GtfsToJson',
                //'scriptB':'com.example.ScriptB',
]
scripts.each() { scriptName, className ->
    def t = tasks.create(name: scriptName+'StartScript', type: CreateStartScripts) {
        mainClassName = className
        applicationName = scriptName
        outputDir = new File(project.buildDir, 'scripts')
        classpath = jar.outputs.files + project.configurations.runtime
    }
    applicationDistribution.into("bin") {
        from(t)
        fileMode = 0755
    }
    createAllStartScripts.dependsOn(t)
}

//sourceSets {
//    main {
//        proto {
//            // In addition to the default 'src/main/proto'
//            srcDir 'src/main/protobuf'
//            srcDir 'src/main/protocolbuffers'
//            // In addition to the default '**/*.proto' (use with caution).
//            // Using an extension other than 'proto' is NOT recommended,
//            // because when proto files are published along with class files, we can
//            // only tell the type of a file from its extension.
//            include '**/*.protodevel'
//        }
//        java {
//            ...
//        }
//    }
//    test {
//        proto {
//            // In addition to the default 'src/test/proto'
//            srcDir 'src/test/protocolbuffers'
//        }
//    }
//}
